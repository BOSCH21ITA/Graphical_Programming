classType MyCCF.myCar.Control
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_3, connection_6, connection_8, connection_14, connection_16, connection_18
		}
	}
	simpleIdentifier MyCCF.resources.DriverMessages.display at (671, 45) {
		label at (0, -1)
		inPin connection_9
		sequenceCall {
			inPin connection_8
		}
	}
	simpleIdentifier MyCCF.resources.DriverMessages.on at (181, 55) {
		label at (0, -1)
		outPin {
			connection_19
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier ACC_instance at (391, 41) size (14, 8) {
		label at (40, 1)
		methodCall MyCCF.myCar.ACC.aCCStatemachineTrigger {
			methodVoidPin at (top, 0) sequenceCall at (-14, -30) {
				inPin connection_3
			}
		}
		elementCall (MyCCF.myCar.ACC.brake) {
			argumentPin at (left, 6) connection_7 {
				bendpoints (80, 0), (80, -50)
			}
			sequenceCall at (-40, 6) {
				inPin connection_6
			}
		}
		elementCall (MyCCF.myCar.ACC.on) {
			argumentPin at (left, 1) connection_17
			sequenceCall at (-30, -24) {
				inPin connection_16
			}
		}
		elementCall (MyCCF.myCar.ACC.accOn) {
			returnPin at (right, 0) {
				connection_15, connection_9
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier MyCCF.resources.DriverMessages.brake at (151, 155) {
		label at (0, -1)
		outPin {
			connection_13, connection_7
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier MyCCF.resources.DriverMessages.power at (151, 205) {
		label at (0, -1)
		outPin {
			connection_11
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier MyCCF.resources.CarMessages.brake at (701, 155) {
		label at (0, -1)
		inPin connection_13
		sequenceCall {
			inPin connection_12 {
				bendpoints (100, 0)
			}
		}
	}
	simpleIdentifier MyCCF.resources.CarMessages.power at (701, 205) {
		label at (0, -1)
		inPin connection_11
		sequenceCall {
			inPin connection_10 {
				bendpoints (0, 70)
			}
		}
	}
	ifElse at (571, 81) {
		inPin connection_15 {
			bendpoints (10, 0), (10, 40)
		}
		ifControlFlowOutPin {
			connection_22, connection_20
		}
		elseControlFlowOutPin {
			connection_12, connection_10
		}
		sequenceCall {
			inPin connection_14
		}
	}
	complexIdentifier EdgeRising_instance at (301, 41) size (3, 3) backgroundColor #ffffff {
		label at (-40, 1)
		methodCall SystemLib.Miscellaneous.EdgeRising.compute {
			argumentPin signal at (left, 1) connection_19
			sequenceCall at (-40, -24) {
				inPin connection_18
			}
		}
		methodCall SystemLib.Miscellaneous.EdgeRising.value {
			returnPin at (right, 1) {
				connection_17
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier MyCCF.resources.CarMessages.brake at (701, 395) {
		label at (0, -1)
		inPin connection_23
		sequenceCall {
			inPin connection_22 {
				bendpoints (20, 0), (20, 290)
			}
		}
	}
	literal Numeric "0.0" at (501, 393) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_23
		}
	}
	literal Numeric "0.0" at (501, 443) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_21
		}
	}
	simpleIdentifier MyCCF.resources.CarMessages.power at (701, 445) {
		label at (0, -1)
		inPin connection_21
		sequenceCall {
			inPin connection_20 {
				bendpoints (20, 0), (20, 340)
			}
		}
	}
}